# Cosmo Router Runtime Configuration
# This file configures router behavior including timeouts, logging, and traffic shaping
# Used alongside the execution config (config.json) generated by wgc

version: "1"

# Server configuration
listen_addr: "localhost:4000"
shutdown_delay: 15s
grace_period: 20s

# Logging configuration
log_level: "info"
json_log: false  # Human-readable logs for development

# Development features
playground_enabled: true
playground_path: "/"
introspection_enabled: true

# Health check endpoints
health_check_path: "/health"
readiness_check_path: "/health/ready"
liveness_check_path: "/health/live"

# CORS configuration for UI access
cors:
  allow_origins:
    - "http://localhost:3001"      # UI development server
    - "http://127.0.0.1:3001"      # Alternative localhost
    - "http://localhost:3002"      # Claude service (for debugging)
    - "http://localhost:3004"      # Git service (for debugging)
    - "http://localhost:3005"      # GitHub adapter (for debugging)
  allow_methods:
    - "HEAD"
    - "GET"
    - "POST"
    - "OPTIONS"
  allow_headers:
    - "*"
  allow_credentials: true

# Traffic shaping - Timeout configuration
traffic_shaping:
  # Router-level limits
  router:
    max_request_body_size: 10MB  # Allow larger payloads for code diffs
  
  # Global timeout settings (applied to all subgraphs by default)
  all:
    # Default timeouts work well for most services
    request_timeout: 60s              # General GraphQL operations
    dial_timeout: 30s                 # Connection establishment
    response_header_timeout: 30s      # Time to wait for response headers
    
    # Connection management
    keep_alive_idle_timeout: 90s      # Keep connections alive
    keep_alive_probe_interval: 30s    # Health check interval
    tls_handshake_timeout: 10s        # TLS handshake timeout
    
    # Connection pooling
    max_idle_conns: 100               # Maximum idle connections
    max_idle_conns_per_host: 10       # Per-host connection limit

  # Per-subgraph timeout overrides
  subgraphs:
    # Claude service needs extended timeout for AI operations
    claude-service:
      request_timeout: 1500s  # 25 minutes for Claude CLI operations
      dial_timeout: 30s       # Keep default dial timeout
      # Reasoning: Claude CLI operations can take up to 20 minutes
      # We add 5 minutes buffer for network latency and processing
      # This is especially needed for generateCommitMessages mutations
    
    # Git service uses default timeouts (60s is sufficient)
    # Most git operations complete within seconds
    
    # GitHub adapter uses default timeouts (60s is sufficient)  
    # API calls typically complete within seconds

# Header manipulation
headers:
  all:
    request:
      # Propagate important headers
      - op: "propagate"
        named: "Authorization"
      - op: "propagate"
        named: "X-Request-ID"
      - op: "propagate"
        named: "Content-Type"
      
      # Add router identification
      - op: "set"
        name: "X-Router-Version"
        value: "cosmo-gothic-v1"
    
    response:
      # Add powered-by header
      - op: "set"
        name: "X-Powered-By"
        value: "metaGOTHIC/Cosmo"

# Telemetry and monitoring
telemetry:
  service_name: "gothic-gateway"
  
  # Tracing configuration
  tracing:
    enabled: true
    sampling_rate: 0.1        # 10% sampling for development
    export_graphql_variables: false  # Don't export sensitive data
  
  # Metrics configuration
  metrics:
    prometheus:
      enabled: true
      path: "/metrics"
  
  # Resource attributes
  resource_attributes:
    - key: "environment"
      value: "development"
    - key: "service.version"
      value: "1.0.0"
    - key: "framework"
      value: "metaGOTHIC"

# Engine configuration
engine:
  enable_single_flight: true      # Deduplicate identical in-flight requests
  enable_request_tracing: true    # Enable request tracing for debugging

# Development-specific settings
dev_mode: true  # Enable development mode features

# Execution configuration
# Points to the wgc-generated config with schema and routing info
execution_config:
  file:
    path: "./config.json"

# Rate limiting (optional, disabled for development)
# rate_limit:
#   enabled: false
#   requests_per_second: 100
#   burst_size: 200

# Authentication (optional, disabled for development)
# authentication:
#   providers:
#     - name: "github"
#       jwks:
#         url: "https://token.actions.githubusercontent.com/.well-known/jwks"
#         refresh_interval: "1h"